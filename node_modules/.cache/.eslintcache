[{"/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/index.js":"1","/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/App.js":"2","/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/reportWebVitals.js":"3","/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/components/Settings.js":"4","/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/components/Timer.js":"5"},{"size":500,"mtime":1656072398981,"results":"6","hashOfConfig":"7"},{"size":2505,"mtime":1662150355975,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1656071324761,"results":"9","hashOfConfig":"7"},{"size":2526,"mtime":1662151440299,"results":"10","hashOfConfig":"7"},{"size":3634,"mtime":1656071683544,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1a2yuxg",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"15"},"/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/index.js",[],[],[],"/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/App.js",[],[],"/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/reportWebVitals.js",[],[],"/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/components/Settings.js",["29"],[],"/Users/franciscoacontellmonje/Desktop/webdev/2022-projects/pomodoro/pomodoro-v2/src/components/Timer.js",["30","31","32","33","34","35"],[],"import React, { useState } from 'react';\nimport { Howl, Howler } from 'howler';\nimport Bell from '../audioclips/bell-01.mp3';\nimport Gong from '../audioclips/gong.mp3';\nimport Duck from '../audioclips/duck.mp3';\n\nfunction Timer(props) {\n  let [seconds, setSeconds] = useState(0);\n  let [minutes, setMinutes] = useState(props.minutesPomodoro || 10);\n  let [minutesBreak, setMinutesBreak] = useState(props.minutesBreak || 10);\n  let [toggleTakingBreak, setToggleTakingBreak] = useState(false);\n  let [toggle, setToggle] = useState(false);\n  let [timerActive, setTimerActive] = useState(props.timerActive);\n  let [startTimer, setStartTimer] = useState();\n  let [workingTime, setWorkingTime] = useState(props.workingTime);\n\n  const { Howl, Howler } = require('howler');\n  const audioClips = [Bell, Gong, Duck];\n\n  //COUNTDOWN LOGIC\n  let countDown = () => {\n    if (seconds === 0 && minutes === 0) {\n      playSound(audioClips[props.soundNumber]);\n      if (toggleTakingBreak) {\n        setToggleTakingBreak((toggleTakingBreak = !toggleTakingBreak));\n        setMinutes((minutes = props.minutesPomodoro));\n\n        props.setWorkingTime(true);\n      } else if (!toggleTakingBreak) {\n        setToggleTakingBreak((toggleTakingBreak = !toggleTakingBreak));\n        setMinutes((minutes = props.minutesBreak));\n\n        props.setWorkingTime(false);\n      }\n    } else if (seconds === 0) {\n      setSeconds((seconds = 59));\n      setMinutes((minutes = minutes - 1));\n    } else if (seconds > 0) {\n      setSeconds((seconds = seconds - 1));\n    }\n  };\n\n  //START-PAUSE action\n  const timer = () => {\n    if (!toggle) {\n      setToggle((toggle = !toggle));\n      setTimerActive((timerActive = 'START'));\n      setStartTimer(setInterval(countDown, 1000));\n    } else {\n      clearInterval(startTimer);\n      setToggle((toggle = !toggle));\n      setTimerActive((timerActive = 'RESUME'));\n    }\n  };\n\n  //RESET BUTTON\n  const reset = () => {\n    setSeconds(0);\n    setTimerActive((timerActive = 'START'));\n    if (!toggleTakingBreak) {\n      setMinutes(props.minutesPomodoro || 45);\n    } else {\n      setMinutes(props.minutesBreak || 5);\n    }\n  };\n\n  //SKIP\n  const skip = () => {\n    if (toggleTakingBreak) {\n      setMinutes(props.minutesPomodoro || 45);\n      setSeconds((seconds = 0));\n      setToggleTakingBreak((toggleTakingBreak = !toggleTakingBreak));\n      setTimerActive((timerActive = 'START'));\n\n      props.setWorkingTime(true);\n    } else {\n      setMinutes(props.minutesBreak || 5);\n      setSeconds((seconds = 0));\n      setToggleTakingBreak((toggleTakingBreak = !toggleTakingBreak));\n      setTimerActive((timerActive = 'START'));\n\n      props.setWorkingTime(false);\n    }\n  };\n  //AUDIO EFFECT PLAYER\n  const playSound = (src) => {\n    const sound = new Howl({\n      src,\n    });\n\n    sound.play();\n  };\n\n  Howler.volume(0.5);\n\n  return (\n    <div>\n      <div className=\"main-container\">\n        {seconds.toString().length === 1 ? (\n          <h3 className=\"timer-numbers\">{`${minutes}:0${seconds}`}</h3>\n        ) : (\n          <h3 className=\"timer-numbers\">{`${minutes}:${seconds}`}</h3>\n        )}\n\n        {toggle ? (\n          <div>\n            <p className=\"buttons\" onClick={timer}>\n              PAUSE\n            </p>\n          </div>\n        ) : (\n          <div>\n            <p className=\"buttons\" onClick={timer}>\n              {timerActive}\n            </p>\n            <p className=\"buttons\" onClick={reset}>\n              RESET\n            </p>\n            <p className=\"buttons\" onClick={skip}>\n              SKIP\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n",{"ruleId":"36","severity":1,"message":"37","line":16,"column":6,"nodeType":"38","endLine":16,"endColumn":8,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":14},{"ruleId":"40","severity":1,"message":"44","line":2,"column":16,"nodeType":"42","messageId":"43","endLine":2,"endColumn":22},{"ruleId":"40","severity":1,"message":"45","line":10,"column":8,"nodeType":"42","messageId":"43","endLine":10,"endColumn":20},{"ruleId":"40","severity":1,"message":"46","line":10,"column":22,"nodeType":"42","messageId":"43","endLine":10,"endColumn":37},{"ruleId":"40","severity":1,"message":"47","line":15,"column":8,"nodeType":"42","messageId":"43","endLine":15,"endColumn":19},{"ruleId":"40","severity":1,"message":"48","line":15,"column":21,"nodeType":"42","messageId":"43","endLine":15,"endColumn":35},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleKeyDown'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-unused-vars","'Howl' is defined but never used.","Identifier","unusedVar","'Howler' is defined but never used.","'minutesBreak' is assigned a value but never used.","'setMinutesBreak' is assigned a value but never used.","'workingTime' is assigned a value but never used.","'setWorkingTime' is assigned a value but never used.",{"desc":"50","fix":"51"},"Update the dependencies array to be: [handleKeyDown]",{"range":"52","text":"53"},[385,387],"[handleKeyDown]"]